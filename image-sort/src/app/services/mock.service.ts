import { Injectable } from '@angular/core';
import { KeywordResponse } from '../models/KeywordResponse';

@Injectable({
  providedIn: 'root'
})
//service for creating mock keyword reponses, for developing without actually calling an API
export class MockService {

  constructor() { }

  keywordResponsesJson = "[\r\n    {\r\n        \"keywords\": [\r\n            {\r\n                \"keyword\": \"illustration\",\r\n                \"score\": 0.7312180675385861\r\n            },\r\n            {\r\n                \"keyword\": \"vector\",\r\n                \"score\": 0.4889261003302555\r\n            },\r\n            {\r\n                \"keyword\": \"symbol\",\r\n                \"score\": 0.4017967950757333\r\n            },\r\n            {\r\n                \"keyword\": \"flame\",\r\n                \"score\": 0.3885602130948118\r\n            },\r\n            {\r\n                \"keyword\": \"fire\",\r\n                \"score\": 0.3703356052016802\r\n            },\r\n            {\r\n                \"keyword\": \"natural phenomenon\",\r\n                \"score\": 0.3703356052016802\r\n            },\r\n            {\r\n                \"keyword\": \"icon\",\r\n                \"score\": 0.31608374236629544\r\n            },\r\n            {\r\n                \"keyword\": \"design\",\r\n                \"score\": 0.31075297820658704\r\n            }\r\n        ],\r\n        \"status\": \"ok\"\r\n    },\r\n    {\r\n        \"keywords\": [\r\n            {\r\n                \"keyword\": \"sport\",\r\n                \"score\": 0.93532932327842\r\n            },\r\n            {\r\n                \"keyword\": \"ball\",\r\n                \"score\": 0.6327695407450672\r\n            },\r\n            {\r\n                \"keyword\": \"american football\",\r\n                \"score\": 0.6257067209797886\r\n            },\r\n            {\r\n                \"keyword\": \"american culture\",\r\n                \"score\": 0.48930513839730333\r\n            },\r\n            {\r\n                \"keyword\": \"sports league\",\r\n                \"score\": 0.25710879296617145\r\n            }\r\n        ],\r\n        \"status\": \"ok\"\r\n    },\r\n    {\r\n        \"keywords\": [\r\n            {\r\n                \"keyword\": \"car\",\r\n                \"score\": 0.9863618049100913\r\n            },\r\n            {\r\n                \"keyword\": \"speed\",\r\n                \"score\": 0.9239284076515025\r\n            },\r\n            {\r\n                \"keyword\": \"sports car\",\r\n                \"score\": 0.8457679359887943\r\n            },\r\n            {\r\n                \"keyword\": \"shiny\",\r\n                \"score\": 0.7166361839769675\r\n            },\r\n            {\r\n                \"keyword\": \"transportation\",\r\n                \"score\": 0.7044859121584462\r\n            },\r\n            {\r\n                \"keyword\": \"modern\",\r\n                \"score\": 0.6389487694775922\r\n            },\r\n            {\r\n                \"keyword\": \"sport\",\r\n                \"score\": 0.6307706311271719\r\n            },\r\n            {\r\n                \"keyword\": \"wheel\",\r\n                \"score\": 0.5957030503295982\r\n            },\r\n            {\r\n                \"keyword\": \"land vehicle\",\r\n                \"score\": 0.579173672651004\r\n            },\r\n            {\r\n                \"keyword\": \"luxury\",\r\n                \"score\": 0.544148456067223\r\n            },\r\n            {\r\n                \"keyword\": \"new\",\r\n                \"score\": 0.3745199633757575\r\n            },\r\n            {\r\n                \"keyword\": \"status car\",\r\n                \"score\": 0.3287236682243692\r\n            },\r\n            {\r\n                \"keyword\": \"isolated\",\r\n                \"score\": 0.31434512264582964\r\n            },\r\n            {\r\n                \"keyword\": \"mode of transport\",\r\n                \"score\": 0.31100441828182096\r\n            },\r\n            {\r\n                \"keyword\": \"smooth\",\r\n                \"score\": 0.2964766667749317\r\n            }\r\n        ],\r\n        \"status\": \"ok\"\r\n    }\r\n]";

  //method for creating mock keyword reponses
  mockKeywordResponses():KeywordResponse[]{
    const jsonObj = JSON.parse(this.keywordResponsesJson);
    return jsonObj as KeywordResponse[];
  }
}
